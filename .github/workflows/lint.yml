name: Lint Terraform
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tflint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    name: tflint

    steps:
    - uses: actions/checkout@v3
      name: Checkout source code

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v3
      name: Setup TFLint
      with:
        tflint_version: v0.46.1

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint --only=terraform_deprecated_interpolation --only=terraform_deprecated_index --only=terraform_unused_declarations --only=terraform_comment_syntax --only=terraform_documented_outputs --only=terraform_documented_variables --only=terraform_typed_variables --only=terraform_module_pinned_source --only=terraform_naming_convention --only=terraform_required_version --only=terraform_required_providers --only=terraform_standard_module_structure --only=terraform_workspace_remote

  validate:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    name: terraform fmt check
    outputs:
      CHECK_STATUS: "${{ env.CHECK_STATUS }}"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Read .terrafrom-version file
      - name: Read .terraform-version
        id: read-tf-version
        run: echo "version=$(cat .terraform-version)" >> $GITHUB_OUTPUT

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ steps.read-tf-version.outputs.version }}

      - name: Validate terraform fmt
        run: |
          set +e

          echo "CHECK_STATUS=0" >> $GITHUB_ENV
          terraform fmt -check
          FMT_STATUS=$(echo $?)
          if [[ $FMT_STATUS -ne 0 ]]; then
            echo "❌ terraform fmt failed - ${changed_file}" >> $GITHUB_STEP_SUMMARY
            echo "CHECK_STATUS=1" >> $GITHUB_ENV
          fi

      - name: Process check
        if: always()
        run: exit $CHECK_STATUS
